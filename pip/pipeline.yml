groups:
  - name: all
    jobs:
      - terraform-apply
      - create-swap-u01
      - install-mysql
      - install-oracle
resources:
  - name: git_stack_ansible
    type: git
    source:
      branch: tfstate
      private_key: ((git_git_mohit_ssh.ssh_key))
      uri: git@github.com:mvohra447/mysql.git
    check_every: 1m  
  - name: git_stack
    type: git
    source:
      branch: stacks
      private_key: ((git_git_mohit_ssh.ssh_key))
      uri: git@github.com:mvohra447/mysql.git
    check_every: 1m
  - name: tfstate
    type: git
    source:
      branch: tfstate
      check_every: 1m
      paths:
        - tfstate/*
      private_key: ((git_git_mohit_ssh.ssh_key))
      uri: git@github.com:mvohra447/mysql.git
resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: 0.12.6
jobs:
  - name: terraform-apply
    max_in_flight: 1
    build_logs_to_retain: 10
    plan:
      - do:
          - get: tfstate
          - get: git_stack
          - task: git_pull_tfstate
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: cycloid/cycloid-toolkit
                  tag: latest
              container_limits: {}
              run:
                path: /bin/bash
                args:
                  - '-c'
                  - |
                    DIR=${PWD}
                    rm -rf state_file_dir/*
                    rsync -av ${DIR}/state_file/* state_file_dir
                    cp -rpR git_stack/terraform/* state_file_dir
                    ls -ltra state_file_dir
              inputs:
                - name: tfstate
                  path: state_file
                - name: git_stack
                  path: git_stack
              outputs:
                - name: state_file_dir
          - task: create_terraform
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: mvohra447/ubuntu-python
                  tag: latest
              container_limits: {}
              run:
                path: /bin/bash
                args:
                  - '-c'
                  - |
                    DIR=${PWD}
                    mkdir ${DIR}/terraform
                    cd /home/FE
                    ./automate_oracle.py FEPROVIDER~((fe_domain_name))~((fe_username))~((fe_password))~((fe_default_region))~((fe_default_region))~((auth_url)) FEVPC~((vpc_name))~((cidr)) FEECS~((ecs_name))~((os_images))~((ecs_flavor))~((fe_keypair))~((ecs_secgroup))~((ecs_vpc))~[\"((os_images))\",\"image\",\"volume\",40,0,\"true\"]~[\"blank\",\"volume\",40,1,\"true\"] FESECGRP~((secgrp_name))~((secgrp_region))~((secgrp_tenantid))~((secgrp_desc))~((secgrp_add))
                    cp provider.tf ${DIR}/terraform
                    cat ${DIR}/terraform/provider.tf
              outputs:
                - name: terraform_dir
                  path: terraform           
          - task: run_terraform_apply
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: mvohra447/terraform-runner
                  tag: latest
              container_limits: {}
              run:
                path: /bin/sh
                args:
                  - '-c'
                  - |
                    cd terraform
                    terraform 0.13upgrade -yes
                    terraform init
                    terraform plan
                    terraform apply --auto-approve
              inputs:
                - name: terraform_dir
                  path: terraform
              outputs:
                - name: terraform_state
                  path: terraform
  - name: create-swap-u01
    build_logs_to_retain: 10
    plan:
      - do:
          - get: tfstate
            passed:
              - terraform-apply
          - config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: mvohra447/ubuntu-python
                  tag: latest
              container_limits: {}
              run:
                path: /bin/sh
                args:
                  - '-c'
                  - |
                    #!/bin/bash
                    DIR=${PWD}
                    cd ${DIR}/tfstate/tfstate/
                    chmod 775 create_swap_mount_u01.sh
                    BASTION_IP='90.84.199.215'
                    echo '((ssh_fe-bastion-jumpserver.ssh_key))' > bastion.pem
                    echo '((ssh_mohit-fe-key.ssh_key))' > mohit.pem
                    chmod 400 mohit.pem
                    chmod 400 bastion.pem
                    
                    export OS_AUTH_URL=https://iam.eu-west-0.prod-cloud-ocb.orange-business.com/v3
                    export OS_DOMAIN_NAME=OCB0001659
                    export OS_TENANT_ID=81f369b80f664ed283540062135a7a41
                    export OS_IDENTITY_API_VERSION=3
                    export OS_USERNAME=((custom_mohit-fe-details.name))
                    export OS_PASSWORD=((custom_mohit-fe-details.login))
                    PRIV_IP=$(openstack server show ((ecs_name)) -f json |jq .'addresses'  | awk -F "=" '{print $2}' | sed -e 's/"//' |awk -F"," '{print $1}')
                    echo ${PRIV_IP} > inventory
                    scp -P 443 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i bastion.pem mohit.pem mount_and_swap.yml create_swap_mount_u01.sh inventory cloud@${BASTION_IP}:/tmp
                    ssh -p 443 -qt -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i bastion.pem cloud@${BASTION_IP} <<EOT
                    export ANSIBLE_HOST_KEY_CHECKING=False
                    cd /tmp
                    ansible-playbook -u cloud --private-key=/tmp/mohit.pem -i /tmp/inventory /tmp/mount_and_swap.yml
                    EOT
              inputs:
                - name: tfstate
                  path: tfstate
              outputs:
                - name: ansible_dir
                  path: ansible
            task: run-ansible
  - name: install-mysql
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_stack_ansible
          - get: tfstate
            passed:
              - terraform-apply
          - config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: mvohra447/ubuntu-python
                  tag: latest
              container_limits: {}
              run:
                path: /bin/sh
                args:
                  - '-c'
                  - |
                    #!/bin/bash
                    DIR=${PWD}
                    cd ${DIR}/ansible-repo/tfstate
                    export OS_AUTH_URL=https://iam.eu-west-0.prod-cloud-ocb.orange-business.com/v3
                    export OS_DOMAIN_NAME=OCB0001659
                    export OS_TENANT_ID=81f369b80f664ed283540062135a7a41
                    export OS_IDENTITY_API_VERSION=3
                    export OS_USERNAME=((custom_mohit-fe-details.name))
                    export OS_PASSWORD=((custom_mohit-fe-details.login))
                    PRIV_IP=$(openstack server show ((ecs_name)) -f json |jq .'addresses'  | awk -F "=" '{print $2}' | sed -e 's/"//' |awk -F"," '{print $1}')
                    BASTION_IP='90.84.199.215'
                    echo '((ssh_fe-bastion-jumpserver.ssh_key))' > bastion.pem
                    echo '((ssh_mohit-fe-key.ssh_key))' > mohit.pem
                    chmod 400 mohit.pem
                    chmod 400 bastion.pem
                    echo ${PRIV_IP} > inventory
                    ls -ltr
                    scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i bastion.pem mohit.pem common_20200513.tar create_allow.yml inventory cloud@${BASTION_IP}:/tmp
                    ssh -qt -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i bastion.pem cloud@${BASTION_IP} <<EOT
                    sudo su -
                    apt-get -y update
                    apt-get -y install ansible
                    export ANSIBLE_HOST_KEY_CHECKING=False
                    mkdir -p /delivery/mysql/5.7.29/
                    cd /delivery/mysql/5.7.29/
                    wget -nv https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-client-5.7.29-1.el7.x86_64.rpm
                    wget -nv https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-common-5.7.29-1.el7.x86_64.rpm
                    wget -nv https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-libs-5.7.29-1.el7.x86_64.rpm
                    wget -nv https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-libs-compat-5.7.29-1.el7.x86_64.rpm
                    wget -nv https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-server-5.7.29-1.el7.x86_64.rpm
                    cd /tmp/
                    ansible-playbook -u cloud --private-key=/tmp/mohit.pem -i /tmp/inventory create_allow.yml
                    tar -xvf common_20200513.tar
                    cd common
                    ansible-playbook -u cloud --private-key=/tmp/mohit.pem -i /tmp/inventory main.yml --extra-vars "roles=mysql_5.7_centos mysql_version=5.7.29"
                    rm -rf /delivery/mysql/5.7.29/*
                    EOT
              inputs:
                - name: git_stack_ansible
                  path: ansible-repo
              outputs:
                - name: ansible_dir
                  path: ansible
            task: run-ansible
  - name: install-oracle
    build_logs_to_retain: 10
    plan:
      - do:
          - get: git_stack_ansible
          - get: tfstate
            passed:
              - create-swap-u01
          - config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: mvohra447/ubuntu-python
                  tag: latest
              container_limits: {}
              run:
                path: /bin/sh
                args:
                  - '-c'
                  - |
                    #!/bin/bash
                    DIR=${PWD}
                    export OS_AUTH_URL=https://iam.eu-west-0.prod-cloud-ocb.orange-business.com/v3
                    export OS_DOMAIN_NAME=OCB0001659
                    export OS_TENANT_ID=81f369b80f664ed283540062135a7a41
                    export OS_IDENTITY_API_VERSION=3
                    export OS_USERNAME=((custom_mohit-fe-details.name))
                    export OS_PASSWORD=((custom_mohit-fe-details.login))
                    PRIV_IP=$(openstack server show ((ecs_name)) -f json |jq .'addresses'  | awk -F "=" '{print $2}' | sed -e 's/"//' |awk -F"," '{print $1}')
                    echo "[dbservers]" > oracle_inventory
                    echo ${PRIV_IP} >> oracle_inventory
                    echo "[ora-x1]" >> oracle_inventory
                    echo ${PRIV_IP} >> oracle_inventory
                    cat oracle_inventory
                    BASTION_IP='90.84.199.215'
                    echo '((ssh_fe-bastion-jumpserver.ssh_key))' > bastion.pem
                    echo '((ssh_mohit-fe-key.ssh_key))' > mohit.pem
                    echo '((ssh_oracle-download.ssh_key))' > oracle_copy.pem
                    chmod 400 mohit.pem
                    chmod 400 bastion.pem
                    chmod 400 oracle_copy.pem
                    ls -ltr
                    scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i oracle_copy.pem bastion.pem ec2-user@107.20.214.85:/tmp
                    ssh -qt -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i oracle_copy.pem ec2-user@107.20.214.85 <<EOT
                    sudo su -
                    cd /home/ec2-user
                    scp -P 443 -r -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /tmp/bastion.pem Software_Installation Database_Creation cloud@90.84.199.215:/tmp
                    EOT
                    scp -P 443 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i bastion.pem mohit.pem oracle_copy.pem create_allow.yml inventory oracle_inventory cloud@${BASTION_IP}:/tmp
                    ssh -p 443 -qt -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i bastion.pem cloud@${BASTION_IP} <<EOT
                    sudo su -
                    apt-get -y update
                    apt-get -y install ansible
                    export ANSIBLE_HOST_KEY_CHECKING=False
                    cd /tmp/
                    scp -r -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /tmp/mohit.pem Software_Installation/roles/dbsoftware19c_install/files/oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm cloud@`cat inventory`:/tmp
                    ansible-playbook -u cloud --private-key=/tmp/mohit.pem -i /tmp/inventory create_allow.yml
                    cd Software_Installation
                    ansible-playbook -u root --private-key=/tmp/mohit.pem -i /tmp/oracle_inventory oracle19c_rdbmsinstall.yml
                    cd ../Database_Creation
                    ansible-playbook -u root --private-key=/tmp/mohit.pem -i /tmp/oracle_inventory cdb_pdb_create.yml
                    EOT
              inputs:
                - name: git_stack_ansible
                  path: ansible-repo
              outputs:
                - name: ansible_dir
                  path: ansible
            task: run-ansible
